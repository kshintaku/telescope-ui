/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.mavenproject1;

/**
 *
 * @author kshintaku
 */
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;

public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        upButton = new javax.swing.JButton();
        currYPos = new javax.swing.JLabel();
        currVertRate = new javax.swing.JLabel();
        downButton = new javax.swing.JButton();
        leftButton = new javax.swing.JButton();
        rightButton = new javax.swing.JButton();
        vertLabel = new javax.swing.JLabel();
        yLabel = new javax.swing.JLabel();
        xLabel = new javax.swing.JLabel();
        horiLabel = new javax.swing.JLabel();
        currHoriRate = new javax.swing.JLabel();
        currXPos = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Telescope Positioning");
        setBackground(new java.awt.Color(0, 0, 0));
        setForeground(java.awt.Color.darkGray);

        upButton.setBackground(new java.awt.Color(204, 204, 204));
        upButton.setText("Up");
        upButton.setPreferredSize(new java.awt.Dimension(100, 30));
        upButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upButtonActionPerformed(evt);
            }
        });

        currYPos.setText("0");

        currVertRate.setText("0");

        downButton.setBackground(new java.awt.Color(204, 204, 204));
        downButton.setFont(new java.awt.Font("Lucida Grande", 0, 13)); // NOI18N
        downButton.setText("Down");
        downButton.setPreferredSize(new java.awt.Dimension(100, 30));
        downButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downButtonActionPerformed(evt);
            }
        });

        leftButton.setText("Left");
        leftButton.setPreferredSize(new java.awt.Dimension(100, 30));
        leftButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leftButtonActionPerformed(evt);
            }
        });

        rightButton.setText("Right");
        rightButton.setPreferredSize(new java.awt.Dimension(100, 30));
        rightButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rightButtonActionPerformed(evt);
            }
        });

        vertLabel.setText("Current Vertical Rate:");

        yLabel.setText("Y-Position:");

        xLabel.setText("X-Position:");

        horiLabel.setText("Current Horizontal Rate:");

        currHoriRate.setText("0");

        currXPos.setText("0");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(leftButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(rightButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(vertLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(currVertRate))
                        .addComponent(horiLabel, javax.swing.GroupLayout.Alignment.LEADING))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(currHoriRate)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(downButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(upButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(62, 62, 62)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(xLabel)
                                .addGap(18, 18, 18)
                                .addComponent(currXPos))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(yLabel)
                                .addGap(18, 18, 18)
                                .addComponent(currYPos)))))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(vertLabel)
                    .addComponent(currVertRate))
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(currYPos)
                    .addComponent(yLabel)
                    .addComponent(downButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(upButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(horiLabel)
                    .addComponent(currHoriRate))
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(leftButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(xLabel)
                    .addComponent(currXPos)
                    .addComponent(rightButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void upButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upButtonActionPerformed
        // TODO add your handling code here:
        if (!swingTimer.isRunning()) {
            swingTimer.start();
        }
        int currRate = Integer.parseInt(currVertRate.getText());
        currRate += 1;
        currVertRate.setText(String.valueOf(currRate));
        if (currRate == 10) {
            upButton.setEnabled(false);
        }
        if (currRate > -10) {
            downButton.setEnabled(true);
        }
//        jLabel1.setText("one");
    }//GEN-LAST:event_upButtonActionPerformed

    private void downButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downButtonActionPerformed
        // TODO add your handling code here:
        if (!swingTimer.isRunning()) {
            swingTimer.start();
        }
        int currRate = Integer.parseInt(currVertRate.getText());
        currRate -= 1;
        currVertRate.setText(String.valueOf(currRate));
        if (currRate == -10) {
            downButton.setEnabled(false);
        }
        if (currRate < 10) {
            upButton.setEnabled(true);
        }
    }//GEN-LAST:event_downButtonActionPerformed

    private void leftButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leftButtonActionPerformed
        // TODO add your handling code here:
        if (!swingTimer.isRunning()) {
            swingTimer.start();
        }
        int currRate = Integer.parseInt(currHoriRate.getText());
        currRate -= 1;
        currHoriRate.setText(String.valueOf(currRate));
        if (currRate == -10) {
            leftButton.setEnabled(false);
        }
        if (currRate < 10) {
            rightButton.setEnabled(true);
        }
    }//GEN-LAST:event_leftButtonActionPerformed

    private void rightButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rightButtonActionPerformed
        // TODO add your handling code here:
        if (!swingTimer.isRunning()) {
            swingTimer.start();
        }
        int currRate = Integer.parseInt(currHoriRate.getText());
        currRate += 1;
        currHoriRate.setText(String.valueOf(currRate));
        if (currRate == 10) {
            rightButton.setEnabled(false);
        }
        if (currRate > -10) {
            leftButton.setEnabled(true);
        }
    }//GEN-LAST:event_rightButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        try {
            ActionListener ticktock = new ActionListener() {
                public void actionPerformed(ActionEvent evnt) {
                    System.out.println("Swing timer started"); //display of this message is basically an action which is associated with swing timer until timer stops
                }
            };
            Timer timer = new Timer(555, ticktock); //timer is ticking
            timer.setRepeats(false); //by using this, we are asking to off timer once
            timer.start();
            Thread.sleep(5555);
            System.out.println("Timeout"); //timer ends and this message is displayed
        } catch (InterruptedException expn) {
        }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    private void setTimer() {

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel currHoriRate;
    private javax.swing.JLabel currVertRate;
    private javax.swing.JLabel currXPos;
    private javax.swing.JLabel currYPos;
    private javax.swing.JButton downButton;
    private javax.swing.JLabel horiLabel;
    private javax.swing.JButton leftButton;
    private javax.swing.JButton rightButton;
    private javax.swing.JButton upButton;
    private javax.swing.JLabel vertLabel;
    private javax.swing.JLabel xLabel;
    private javax.swing.JLabel yLabel;
    // End of variables declaration//GEN-END:variables
    
    private javax.swing.Timer swingTimer = new Timer(1000, new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            currYPos.setText(String.valueOf(Integer.parseInt(currYPos.getText()) + Integer.parseInt(currVertRate.getText())));
            currXPos.setText(String.valueOf(Integer.parseInt(currXPos.getText()) + Integer.parseInt(currHoriRate.getText())));
        }
    });
}
